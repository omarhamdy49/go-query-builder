name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  build-test:
    name: Test & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Run tests
        run: go test -race .

      - name: Build (linux)
        run: go build -v .

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Resolve version from tag
        id: v
        run: echo "VERSION=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"

      - name: Build release binaries
        run: |
          mkdir -p dist
          # Basic usage builds
          GOOS=linux   GOARCH=amd64 go build -o dist/basic_usage_linux_amd64       examples/basic_usage.go examples/advanced_features.go
          GOOS=darwin  GOARCH=amd64 go build -o dist/basic_usage_darwin_amd64      examples/basic_usage.go examples/advanced_features.go
          GOOS=windows GOARCH=amd64 go build -o dist/basic_usage_windows_amd64.exe examples/basic_usage.go examples/advanced_features.go
          # Env config builds
          GOOS=linux   GOARCH=amd64 go build -o dist/env_config_linux_amd64        examples/env_config_example.go
          GOOS=darwin  GOARCH=amd64 go build -o dist/env_config_darwin_amd64       examples/env_config_example.go
          GOOS=windows GOARCH=amd64 go build -o dist/env_config_windows_amd64.exe  examples/env_config_example.go

      - name: Generate changelog
        run: |
          echo "# Changelog for ${{ steps.v.outputs.VERSION }}" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## What's Changed" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          # use previous tag..HEAD, fallback for first release
          (git log "$(git describe --tags --abbrev=0 HEAD^)"..HEAD --pretty=format:"- %s" || echo "- Initial release") >> CHANGELOG.md

      - name: Publish release and assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.v.outputs.VERSION }}
          name: Release ${{ steps.v.outputs.VERSION }}
          body_path: CHANGELOG.md
          files: |
            dist/basic_usage_linux_amd64
            dist/basic_usage_darwin_amd64
            dist/basic_usage_windows_amd64.exe
            dist/env_config_linux_amd64
            dist/env_config_darwin_amd64
            dist/env_config_windows_amd64.exe
        env:
          GITHUB_TOKEN: ${{ github.token }}

  publish-docs:
    name: Publish Docs (GitHub Pages)
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Install godoc
        run: go install golang.org/x/tools/cmd/godoc@latest

      - name: Generate API docs
        run: |
          mkdir -p docs/api
          godoc -html . > docs/api/index.html

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ github.token }}
          publish_dir: ./docs
