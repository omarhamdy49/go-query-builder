name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

jobs:
  build-test:
    name: Test & Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Run tests
        run: go test -race ./pkg/...

      - name: Build main package
        run: go build -v .

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Resolve version from tag
        id: v
        run: echo "VERSION=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"

      - name: Build release binaries
        run: |
          mkdir -p dist
          
          # Build main library package
          GOOS=linux   GOARCH=amd64 go build -o dist/go-query-builder_linux_amd64       .
          GOOS=darwin  GOARCH=amd64 go build -o dist/go-query-builder_darwin_amd64      .
          GOOS=windows GOARCH=amd64 go build -o dist/go-query-builder_windows_amd64.exe .

      - name: Generate changelog
        run: |
          echo "# Changelog for ${{ steps.v.outputs.VERSION }}" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## What's Changed" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## Features" >> CHANGELOG.md
          echo "- Go Query Builder library" >> CHANGELOG.md
          echo "- Cross-platform binaries (Linux, macOS, Windows)" >> CHANGELOG.md
          echo "- Complete API documentation" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "## Git Changes" >> CHANGELOG.md
          # use previous tag..HEAD, fallback for first release
          (git log "$(git describe --tags --abbrev=0 HEAD^)"..HEAD --pretty=format:"- %s" || echo "- Initial release") >> CHANGELOG.md

      - name: Publish release and assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.v.outputs.VERSION }}
          name: Release ${{ steps.v.outputs.VERSION }}
          body_path: CHANGELOG.md
          files: |
            dist/go-query-builder_linux_amd64
            dist/go-query-builder_darwin_amd64
            dist/go-query-builder_windows_amd64.exe
        env:
          GITHUB_TOKEN: ${{ github.token }}

  publish-docs:
    name: Publish Docs (GitHub Pages)
    runs-on: ubuntu-latest
    needs: release
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Install godoc
        run: go install golang.org/x/tools/cmd/godoc@latest

      - name: Generate API docs
        run: |
          mkdir -p docs/api
          # Generate docs for the main package and subpackages
          godoc -html . > docs/api/index.html
          
          # Generate docs for each package
          mkdir -p docs/api/pkg
          for pkg in pkg/*/; do
            if [ -d "$pkg" ]; then
              pkg_name=$(basename "$pkg")
              godoc -html "./$pkg" > "docs/api/pkg/${pkg_name}.html" 2>/dev/null || echo "Skipped $pkg_name"
            fi
          done

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ github.token }}
          publish_dir: ./docs
